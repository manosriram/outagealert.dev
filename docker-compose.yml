services:
  app:
    image: manosriram/outagealert:app
    environment:
      DOPPLER_TOKEN: ${DOPPLER_TOKEN}
    deploy:
      resources:
        limits:
          memory: 250M
        reservations:
          memory: 100M
      restart_policy:
        condition: on-failure
      replicas: 2
    command: >
      sh -c "doppler run -- ./outagealert"
    tty: true
    expose:
      - "1323"
    depends_on:
      - db
    networks:
      - outagenet

  nginx:
    image: nginx:1.27.2
    ports:
      - "80:80"
    deploy:
      resources:
        limits:
          memory: 150M
        reservations:
          memory: 50M
      restart_policy:
        condition: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./robots.txt:/usr/share/nginx/html/robots.txt
      - ./sitemap.xml:/usr/share/nginx/html/sitemap.xml
    depends_on:
      - app
    networks:
      - outagenet
  
  db:
    image: postgres:16
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=outagealert
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PGUSER=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    expose:
      - 5432
    ports:
      - "127.0.0.1:5432:5432"
      # - ./init-database.sql:/docker-entrypoint-initdb.d/init-database.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d outagealert -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - outagenet

  migrations:
    image: ghcr.io/kukymbr/goose-docker
    depends_on:
      - db
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=db port=5432 user=postgres password=password dbname=outagealert sslmode=disable
      - GOOSE_VERBOSE=true
      - GOOSE_COMMAND=up
    volumes:
      - ./migrations:/migrations
    networks:
      - outagenet

networks:
  outagenet:
    external: true

volumes:
  postgres_data:
