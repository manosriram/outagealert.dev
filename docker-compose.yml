services:
  app:
    image: manosriram/outagealert:app
    deploy:
      mode: replicated
      replicas: 3
    environment:
      DOPPLER_TOKEN: ${DOPPLER_TOKEN}
    command: >
      sh -c "doppler run -- ./outagealert"
    tty: true
    networks:
      outagenet:
        ipv4_address: 10.0.1.10
    ports:
      - "1323:1323"
      - "80:1323"
    depends_on:
      - db

  db:
    image: postgres:13
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=outagealert
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      outagenet:
        ipv4_address: 10.0.1.11
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d outagealert'" ]
      interval: 10s
      timeout: 1s
      retries: 5

  migrations:
    image: ghcr.io/kukymbr/goose-docker
    networks:
      - outagenet
    depends_on:
      - db
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=db port=5432 user=postgres password=password dbname=outagealert
      - GOOSE_VERBOSE=true
      - GOOSE_COMMAND=up
    volumes:
      - ./migrations:/migrations

networks:
  outagenet:
    external: true
    ipam:
      config:
        - subnet: 10.0.1.0/24


volumes:
  postgres_data:
  # secondary_volume:
    # driver: local
    # driver_opts:
      # type: none
      # device: /mnt/volume_sgp1_02
      # o: bind
