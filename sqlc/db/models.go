// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type AlertType string

const (
	AlertTypeEmail   AlertType = "email"
	AlertTypeSlack   AlertType = "slack"
	AlertTypeWebhook AlertType = "webhook"
)

func (e *AlertType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AlertType(s)
	case string:
		*e = AlertType(s)
	default:
		return fmt.Errorf("unsupported scan type for AlertType: %T", src)
	}
	return nil
}

type NullAlertType struct {
	AlertType AlertType
	Valid     bool // Valid is true if AlertType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAlertType) Scan(value interface{}) error {
	if value == nil {
		ns.AlertType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AlertType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAlertType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AlertType), nil
}

type AlertIntegration struct {
	ID               *string
	MonitorID        string
	IsActive         bool
	EmailAlertSent   bool
	SlackAlertSent   bool
	WebhookAlertSent bool
	AlertType        AlertType
	AlertTarget      *string
	CreatedAt        pgtype.Timestamp
	UpdatedAt        pgtype.Timestamp
}

type ContactU struct {
	Name      *string
	Email     *string
	Message   *string
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
}

type Event struct {
	ID         string
	MonitorID  string
	FromStatus string
	ToStatus   string
	CreatedAt  pgtype.Timestamp
	UpdatedAt  pgtype.Timestamp
}

type Monitor struct {
	ID                string
	Name              string
	Period            int32
	GracePeriod       int32
	UserEmail         string
	ProjectID         string
	PingUrl           string
	Status            string
	StatusBeforePause *string
	IsActive          *bool
	Type              string
	TotalPauseTime    *int32
	LastPing          pgtype.Timestamp
	LastPausedAt      pgtype.Timestamp
	LastResumedAt     pgtype.Timestamp
	CreatedAt         pgtype.Timestamp
	UpdatedAt         pgtype.Timestamp
}

type Ping struct {
	ID        string
	MonitorID string
	Status    *int32
	Metadata  []byte
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
}

type Plan struct {
	ID       int32
	Name     *string
	Price    *int32
	Validity *int32
}

type Project struct {
	ID         string
	Name       string
	Visibility string
	UserEmail  string
	CreatedAt  pgtype.Timestamp
	UpdatedAt  pgtype.Timestamp
}

type User struct {
	ID         int32
	Name       *string
	Email      string
	IsVerified bool
	Password   string
	IsActive   bool
	Otp        *string
	MagicToken *string
	LastLogin  pgtype.Timestamp
	CreatedAt  pgtype.Timestamp
	UpdatedAt  pgtype.Timestamp
	Plan       *string
}

type UserOrder struct {
	OrderID               string
	UserEmail             string
	OrderStatus           string
	OrderPaymentSessionID *string
	Plan                  *string
	OrderExpiryTime       pgtype.Timestamp
	OrderCurrency         *string
	OrderAmount           *int32
	CreatedAt             pgtype.Timestamp
	UpdatedAt             pgtype.Timestamp
}
